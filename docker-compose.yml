version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - NODE_OPTIONS=--max_old_space_size=4096
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    depends_on:
      - backend
    networks:
      - socialize-network

  # Backend Laravel Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - database
      - redis
    networks:
      - socialize-network

  # Nginx Service
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/html
      - ./frontend/build:/var/www/frontend
    depends_on:
      - backend
      - frontend
    networks:
      - socialize-network

  # MySQL Database
  database:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-socialize}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-root}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - socialize-data:/var/lib/mysql
    networks:
      - socialize-network

  # Redis Service
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - socialize-network

networks:
  socialize-network:
    driver: bridge

volumes:
  socialize-data:
    driver: local 